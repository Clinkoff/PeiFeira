// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeiFeira.Infrastructure.Data;

#nullable disable

namespace PeiFeira.Infrastructure.Migrations
{
    [DbContext(typeof(PeiFeiraDbContext))]
    partial class PeiFeiraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeiFeira.Domain.Entities.Avaliacoes.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AvaliadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClarezaApresentacao")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("DominioAssunto")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FocoSolucao")
                        .HasColumnType("int");

                    b.Property<int>("FundamentacaoProblema")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LinguagemTempo")
                        .HasColumnType("int");

                    b.Property<decimal>("NotaFinal")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("PadronizacaoApresentacao")
                        .HasColumnType("int");

                    b.Property<decimal>("PontuacaoTotal")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("QualidadeRespostas")
                        .HasColumnType("int");

                    b.Property<int>("RelevanciaProblema")
                        .HasColumnType("int");

                    b.Property<int>("TransmissaoInformacoes")
                        .HasColumnType("int");

                    b.Property<int>("ViabilidadeSolucao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliadorId");

                    b.HasIndex("IsActive");

                    b.HasIndex("NotaFinal");

                    b.HasIndex("EquipeId", "AvaliadorId")
                        .IsUnique()
                        .HasDatabaseName("IX_Avaliacao_Equipe_Avaliador_Unique");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Equipes.Equipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoConvite")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("LiderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UrlQrCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoConvite")
                        .IsUnique()
                        .HasFilter("[CodigoConvite] IS NOT NULL");

                    b.HasIndex("IsActive");

                    b.HasIndex("LiderId");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Equipes.MembroEquipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EquipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<DateTime>("IngressouEm")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SaiuEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.HasIndex("IsActive");

                    b.HasIndex("UsuarioId", "EquipeId", "IsActive")
                        .HasDatabaseName("IX_MembroEquipe_Usuario_Equipe_Active");

                    b.ToTable("MembrosEquipe");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Projetos.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CargoResponsavel")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contato")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesafioProposto")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EmailResponsavel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EnderecoCompleto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("EquipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NomeEmpresa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NomeResponsavel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RedeSocial")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("RedesSociaisResponsavel")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TelefoneResponsavel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Avaliacoes.Avaliacao", b =>
                {
                    b.HasOne("PeiFeira.Domain.Entities.Usuarios.Usuario", "Avaliador")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AvaliadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeiFeira.Domain.Entities.Equipes.Equipe", "Equipe")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliador");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Equipes.Equipe", b =>
                {
                    b.HasOne("PeiFeira.Domain.Entities.Usuarios.Usuario", "Lider")
                        .WithMany()
                        .HasForeignKey("LiderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lider");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Equipes.MembroEquipe", b =>
                {
                    b.HasOne("PeiFeira.Domain.Entities.Equipes.Equipe", "Equipe")
                        .WithMany("Membros")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeiFeira.Domain.Entities.Usuarios.Usuario", "Usuario")
                        .WithMany("MembroEquipes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Projetos.Projeto", b =>
                {
                    b.HasOne("PeiFeira.Domain.Entities.Equipes.Equipe", "Equipe")
                        .WithOne("Projeto")
                        .HasForeignKey("PeiFeira.Domain.Entities.Projetos.Projeto", "EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Equipes.Equipe", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Membros");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("PeiFeira.Domain.Entities.Usuarios.Usuario", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("MembroEquipes");
                });
#pragma warning restore 612, 618
        }
    }
}
